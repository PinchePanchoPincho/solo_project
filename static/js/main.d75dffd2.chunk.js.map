{"version":3,"sources":["files/info2.svg","files/ball4.png","files/chat3.svg","mocks/profile.js","containers/Nav.js","components/PotentialInfo.js","components/Decision.js","containers/Match.js","components/Matched.js","containers/Profile.js","components/Messages.js","components/MessageList.js","containers/MyMatches.js","components/MessageInput.js","App.js","containers/Chat.js","containers/LogIn.js","containers/Create.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","profile","first","last","skill","age","img","Component","UserInfo","state","show","click","_this","setState","theEnd","react_default","a","createElement","className","_this2","this","_this$props","props","potentials","yes","no","cards","map","user","skillArr","Array","Number","fill","racket","src","alt","myStyle","display","flexDirection","justifyContent","backgroundImage","concat","backgroundSize","backgroundPosition","backgroundRepeat","alignSelf","width","height","marginTop","react_swipeable_cards_es","style","key","_id","onSwipeRight","onDoubleTap","onSwipeLeft","description","infoimg","onClick","addEndCard","Decision","Matched","_ref","matches","myMatches","el","messages","length","es","to","idid","Messages","myChats","content","MessageList","showPic","clickPic","userID","find","x","messageView","message","index","tag","author","MessageInput","msg","post","type","placeholder","onChange","e","target","value","url","socket","openSocket","App","loading","located","myUser","newMatch","toggleNew","success","_located$coords","coords","latitude","longitude","console","log","create","navigator","geolocation","getCurrentPosition","fetch","method","headers","Content-Type","body","JSON","stringify","then","Object","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","status","alert","json","sent","localStorage","setItem","token","t0","stop","_x","apply","arguments","fetchAndSetMatches","fetchAndSetPotentials","logout","removeItem","Access-Control-Allow-Credentials","result","currentPotential","catch","err","updateUser","sport","fetchAndSetUser","error","showPosition","position","Headers","Authorization","btoa","email","password","_ref2","_callee2","_context2","_x2","emit","toPost","id","chatID","shift","document","documentElement","requestFullscreen","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d75dffd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/info2.8d4aff01.svg\";","module.exports = __webpack_public_path__ + \"static/media/ball4.9f543099.png\";","module.exports = __webpack_public_path__ + \"static/media/chat3.91b10fb5.svg\";","const profile = {\n  first: 'Rafael',\n  last: 'Nadal',\n  skill:'4',\n  age: 32,\n  img: 'https://res.cloudinary.com/pinchepanchopincho/image/upload/v1547042159/userpics/nadal2.jpg'\n\n};\n\nexport default profile;\n","import React, { Component } from 'react';\nimport { Link } from '@reach/router';\nimport ballimg from '../files/ball4.png';\nimport chatimg from '../files/chat3.svg';\nimport profile from '../mocks/profile';\n\nclass Nav extends Component {\n\n  render () {\n\n    const myStyle = {\n      backgroundImage: `url(${profile.img})`\n    }\n\n    return (\n      <div className=\"navbar\">\n        <Link to=\"profile\">\n          <div className=\"navbutton button profilpic\" style={myStyle} alt=\"user\"></div>\n        </Link>\n        <Link to=\"/\">\n          <img className=\"navbutton navmatch\" src={ballimg} alt=\"matching\"></img>\n        </Link>\n        <Link to=\"mymatches\">\n          <img className=\"navbutton\" src={chatimg} alt=\"chat\"></img>\n        </Link>\n      </div>\n    );\n  }\n};\n\nexport default Nav;","import React, { Component } from 'react';\nimport { Card, CardWrapper } from 'react-swipeable-cards';\nimport infoimg from '../files/info2.svg';\n\n\nclass UserInfo extends Component {\n  state = {\n    show: false\n  }\n\n  click = () => {\n    this.state.show ? this.setState({ show: false }) : this.setState({ show: true });\n  }\n\n  theEnd = () => {\n    return (\n      <div>\n        <div className=\"logo\">\n          <span className=\"mylogo\">MATCH</span>\n          <span className=\"noplayers\">No Players Near You</span>\n        </div>\n      </div>\n    )\n  };\n\n  render () {\n    const { potentials, yes, no } = this.props;\n    const cards = potentials.map(user => {\n      let skill = Array(Number(user.skill)).fill('🎾')\n      let skillArr = skill.map(racket => {\n        return (\n          <img src='https://res.cloudinary.com/pinchepanchopincho/image/upload/v1547497115/styles/ball4.png' className=\"skillimg\" alt=\"ball\" ></img>\n        )\n      });\n\n      const myStyle = {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-end',\n        backgroundImage: `url(${user.img})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        alignSelf: 'center',\n        width: '84%',\n        height: '92%',\n        marginTop: '2vh'\n      }\n\n      return (\n        <Card style={myStyle} key={user._id} onSwipeRight={yes} onDoubleTap={yes} onSwipeLeft={no}>\n          {this.state.show ? <div className=\"thedescription\">\n            <div className=\"sub-description\">{user.description}</div>\n            <div className=\"skillArr\">\n              <span className=\"theskill1\">Skill Level:</span>\n              <span className=\"theskill2\">  {skillArr}</span>\n            </div>\n          </div> : null}\n          <div className=\"userinfo\">\n            <div className=\"username\">{user.first}, {user.age}</div>\n            <div className=\"descriptiondiv\">\n              <img className=\"userdescription description-button\" src={infoimg} onClick={this.click} alt=\"img\"></img>\n            </div>\n          </div>\n        </Card>\n      )\n    })\n\n    if (potentials) {\n      return (\n        <div className=\"usercontainer\">\n          <CardWrapper className=\"wrapper\" addEndCard={this.theEnd}>\n            {cards}\n          </CardWrapper>\n        </div>\n      );\n    }\n    else {\n      return (\n        <div>User not found!</div>\n      );\n    }\n  };\n}\n\nexport default UserInfo;\n\n","import React from 'react';\n\nconst Decision = (props) => {\n\n  const {yes} = props;\n  const {no} = props;\n\n  return (\n    <div className=\"decision-container\">\n      <span className=\"decide no\" onClick={no}></span>\n      <span className=\"decide yes\" onClick={yes}></span>\n    </div>\n  )\n}\n\nexport default Decision;","import React, { Component } from 'react';\nimport PotentialInfo from '../components/PotentialInfo';\nimport Decision from '../components/Decision';\nimport { Link } from '@reach/router';\n\n\nclass Match extends Component {\n\n  render () {\n    const { yes, no, newMatch, currentPotential, toggleNew } = this.props;\n    if (newMatch && currentPotential) {\n\n      const theStyle = {\n        backgroundImage: `url(${currentPotential.img})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        height: '30vh',\n        width: '30vh',\n        borderRadius: '100%',\n        marginBottom: '3vh'\n\n      }\n\n      return (\n        <div className=\"newmatch-box\">\n          <div className=\"newmatch-data\">\n            <div className=\"newmatch-notify\">You've got a new</div>\n            <div className=\"newmatch-logo\">MATCH</div>\n            <div className=\"newmatch-pic\" style={theStyle}></div>\n            <div className=\"newmatch-info\">{currentPotential.first}, {currentPotential.age}</div>\n          </div>\n          <div className=\"newmatch-buttons\">\n            <Link to={`mymatches`} onClick={toggleNew} >\n              <div className=\"newmatch-btn\" >SEND MESSAGE</div>\n            </Link>\n            <div className=\"newmatch-btn\" onClick={toggleNew}>KEEP SWIPING</div>\n          </div>\n        </div>\n      )\n    }\n\n    else if (!this.newMatch && this.props.potentials) {\n      return (\n        <div className=\"matchbox\">\n          <PotentialInfo potentials={this.props.potentials} yes={yes} no={no} />\n          <Decision yes={yes} no={no} />\n        </div>\n\n      );\n    }\n    else return null;\n\n  };\n}\n\nexport default Match;\n","import React from 'react';\nimport { Link } from '@reach/router'\n\nconst Matched = ({ matches }) => {\n\n  const myMatches = matches.map(el => {\n\n    if (!el.messages.length) {\n      return (\n        <Link to={`chatview/${el.idid}`} state={{ user: el }} key={el.idid} >\n          <img className=\"chatpic\" src={el.img} alt=\"matchimg\"></img>\n        </Link>\n      )\n    }\n  });\n\n  if (matches && myMatches) {\n    return (\n      <div className=\"matched\">\n        {myMatches}\n      </div>\n    )\n  }\n  else return null;\n};\n\nexport default Matched;","import React, { Component } from 'react';\nimport { Redirect, Link } from '@reach/router'\n\n\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      first: this.props.myUser.first,\n      last: this.props.myUser.last,\n      age: this.props.myUser.age,\n      skill: this.props.myUser.skill,\n      sport: this.props.myUser.sport,\n      distance: this.props.myUser.distance/1000\n    }\n  }\n\n  render () {\n    if (!localStorage.getItem('token')) return <Redirect to=\"/\" />\n    else {\n      return (\n        <div className=\"profilebox\">\n          <div className=\"profile sport\">\n            <span className=\"title\" >Sport:</span>\n            <select className=\"value sport-input\" name=\"carlist\" form=\"carform\" name=\"sport\" onChange={e => this.setState({ sport: e.target.value })\n            }>\n              <option value=\"tennis\">Tennis</option>\n              <option value=\"tabletennis\">Table-Tennis</option>\n              <option value=\"badminton\">Badminton</option>\n              <option value=\"squash\">Squash</option>\n            </select>\n          </div>\n          <div className=\"profile first\">\n            <span className=\"title\" >First Name:</span>\n            <input className=\"value first-input\" placeholder={this.state.first}\n              onChange={(e) => this.setState({ first: e.target.value })} ></input>\n          </div>\n          <div className=\"profile last\">\n            <span className=\"title\" >Last Name:</span>\n            <input className=\"value last-input\" placeholder={this.state.last} onChange={(e) => this.setState({ last: e.target.value })}></input>\n          </div>\n          <div className=\"profile age\">\n            <span className=\"title\" >Age:</span>\n            <input className=\"value age-input\" placeholder={this.state.age} onChange={(e) => this.setState({ age: e.target.value })}></input>\n          </div>\n          <div className=\"profile skill\">\n            <span className=\"title\" >Skill:</span>\n            <div className=\"skilldiv\">\n              <span className=\"skilltitle\">{this.state.skill} /5</span>\n              <input type=\"range\" className=\"value skill-input ranger\" min=\"1\" max=\"5\" defaultValue={this.state.skill}  onChange={(e) => this.setState({ skill: e.target.value })}></input></div>\n          </div>\n          <div className=\"profile distance\">\n            <span className=\"title\" >Distance:</span>\n            <div className=\"rangediv\">\n              <span className=\"rangetitle\">{this.state.distance} km</span>\n            <input type=\"range\" className=\"value distance-input ranger\" min=\"1\" max=\"50\" placeholder={this.state.distance} defaultValue={this.state.distance} onChange={(e) => this.setState({ distance: e.target.value })}></input></div>\n          </div>\n          <button className=\"profile-button\" onClick={(e) => this.props.updateUser(this.state)} >Change</button>\n          <Link to=\"/\" className=\"logout-button\" onClick={this.props.logout}>LogOut</Link>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Profile;","import React from 'react';\nimport { Link } from '@reach/router';\n\nconst Messages = ({matches}) => {\n\n  const myChats = matches.map(el => {\n\n    if (el.messages.length) {\n\n      return (\n        <Link to={`chatview/${el.idid}`} state={{ user: el }} key={el.idid}>\n          <div className=\"chatpreview\">\n            <img className=\"chatpic\" src={el.img} alt=\"matchpic\"></img>\n            <div className=\"msgheader\">\n              <div className=\"msgpreview msgname\">{el.first}</div>\n              <div className=\"msgpreview\">{el.messages[0].content}</div>\n            </div>\n          </div>\n        </Link>\n      )\n    };\n  });\n\n  return (\n    <div className=\"chatoverview\">\n      {myChats}\n    </div>\n  )\n};\n\nexport default Messages;","import React, { Component } from 'react';\nimport infoimg from '../files/info2.svg';\n\n\nclass MessageList extends Component {\n  state = {\n    show: false,\n    showPic: false\n  }\n\n  click = () => {\n    this.state.show ? this.setState({ show: false }) : this.setState({ show: true, showPic: false });\n  }\n\n  clickPic = () => {\n    this.state.showPic ? this.setState({ showPic: false }) : this.setState({ showPic: true, show: false });\n  }\n\n  render () {\n    let userID = this.props.user.idid\n    let user = this.props.matches.find(x => x.idid === userID);\n    const messages = user.messages;\n    const received = \"received\";\n    const sent = \"sent\";\n    let messageView = [];\n    let skill = Array(Number(user.skill)).fill('🎾')\n    let skillArr = skill.map(racket => {\n      return (\n        <img src='https://res.cloudinary.com/pinchepanchopincho/image/upload/v1547497115/styles/ball4.png' className=\"skillimg\" alt=\"ball\" ></img>\n      )\n    });\n\n    if (messages.length) {\n\n      messageView = messages.map((message,index )=> {\n        let tag;\n        message.author === user.idid ? tag = received : tag = sent;\n        return (\n          <div className={`message ${tag}`} key={index}>{message.content}</div>\n        )\n      })\n    }\n\n    if (messageView && messageView.length) return (\n      <div className=\"message-container\" >\n        <div className=\"chatpartner\">\n          <div className=\"sub-partner\">\n            <img className=\"chatpic inchatpic\" src={user.img} alt=\"matchpic\"></img>\n            <div className=\"partnername\">{user.first}, {user.age}</div>\n          </div>\n          <img className=\"chatdescription\" src={infoimg} onClick={this.click} alt=\"info\"></img>\n        </div>\n        {this.state.show ? <div className=\"description-box-chat\" key={`b +${user.idid}`}>{user.description}</div> :\n          <div className=\"the-message-list\">{messageView}</div>}\n\n\n      </div>\n    );\n    else return (\n      <div className=\"message-container\">\n        <div className=\"chatpartner\">\n          <div className=\"sub-partner\">\n            <img className=\"chatpic inchatpic\" src={user.img} alt=\"matchpic\" onClick={this.clickPic}></img>\n            <div className=\"partnername\">{user.first}, {user.age}</div>\n          </div>\n          <img className=\"chatdescription\" src={infoimg} onClick={this.click} alt=\"info\"></img>\n        </div>\n        {this.state.show ?\n          <div className=\"description-box-chat\">\n            {user.description}\n            <div className=\"skillArr chatskill\">\n              <span className=\"theskill1\">Skill Level:</span>\n              <span className=\"theskill2\">  {skillArr}</span>\n            </div>\n          </div> : null}\n      </div>\n    )\n  }\n}\n\n\n\nexport default MessageList;","import React, { Component } from 'react';\nimport Matched from '../components/Matched';\nimport Messages from '../components/Messages';\n\nclass MyMatches extends Component {\n\n  componentDidMount () {\n   this.props.fetchAndSet();\n  }\n\n  render () {\n\n    const { matches } = this.props;\n\n    if (this.props) {\n\n      return (\n        <div className=\"chatview\">\n          <Matched matches={matches} />\n          <Messages matches={matches} />\n        </div>\n      )\n    }\n\n    else return null;\n  }\n}\n\nexport default MyMatches;","import React, {Component} from 'react';\n\nclass MessageInput extends Component {\n  state = {\n    msg:''\n  }\n\n  render () {\n    const {post} = this.props;\n    const {user} = this.props;\n\n  return (\n    <div className=\"inputbox\">\n      <input type=\"text\" className=\"sendmsg\" placeholder=\"Type your message\" onChange={(e)=> this.setState({msg:e.target.value}) } value={this.state.msg}></input>\n      <button className=\"sendbtn\" onClick={(e) => {post(this.state.msg, user);this.setState({msg:''})}}>SEND</button>\n    </div>\n  )}\n};\n\nexport default MessageInput;","import React, { Component } from 'react';\nimport { Router } from '@reach/router';\nimport openSocket from 'socket.io-client';\nimport Nav from './containers/Nav';\nimport Match from './containers/Match';\nimport Profile from './containers/Profile';\nimport MyMatches from './containers/MyMatches';\nimport Chat from './containers/Chat';\nimport Login from './containers/LogIn';\nimport Create from './containers/Create';\n\n\nimport './App.css';\n\nconst url = 'https://cors-anywhere.herokuapp.com/https://private-0756c-match11.apiary-mock.com'\nconst urlAlt = 'http://localhost:3000'\nconst socket = openSocket(url);\n\nclass App extends Component {\n\n  state = {\n    loading: true,\n    located: [],\n    matches: [],\n    potentials: [],\n    myUser: {},\n    newMatch: false\n  }\n\n  toggleNew = () => {\n    this.setState({newMatch:false})\n  }\n  success = (located) => {\n    const { latitude, longitude } = located.coords;\n    this.setState({ located: [longitude, latitude] }, () => console.log('location', this.state.located));\n  }\n\n  create = (e) => {\n    let user = e;\n    navigator.geolocation.getCurrentPosition(this.success);\n    user.located = this.state.located;\n\n    fetch(`${url}/create`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    })\n      .then(async res => {\n        try {\n          if (res.status === 401) { alert('User already exists') }\n          else if (res.status === 401) { alert('Wrong password.') }\n          else if (res.status === 201) {\n            const myUser = await res.json();\n            localStorage.setItem('token', myUser.token);\n            localStorage.setItem('userID', myUser.idid)\n            this.setState({ myUser });\n          }\n          else { alert('Unknown error') }\n        }\n        catch (err) { console.log(err) }\n      })\n      .then(this.fetchAndSetMatches)\n      .then(this.fetchAndSetPotentials)\n  }\n\n  logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userID');\n    this.setState({});\n  }\n\n  login (e) {\n    fetch(`${url}/login`, {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': 'Basic ' + btoa(`${e.email}:${e.password}`),\n        'Access-Control-Allow-Credentials': true,\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    })\n      .then(async res => {\n        if (res.status === 404) alert('User not found')\n        else if (res.status === 401) alert('Wrong password.')\n        else if (res.status === 201) {\n          const myUser = await res.json();\n          this.setState({ myUser });\n          localStorage.setItem('token', myUser.token);\n          localStorage.setItem('userID', myUser.idid);\n        }\n      })\n      .then(this.fetchAndSetMatches)\n      .then(this.fetchAndSetPotentials);\n  };\n\n  postMsgToServer (msg, user) {\n    socket.emit('sendmsg',msg);\n    let toPost = {\n      msg,\n      id: user.idid,\n      chatID: user.chatID\n    };\n    fetch(`${url}/msg/${this.state.myUser.idid}`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(toPost) })\n      .then(this.fetchAndSetMatches)\n      .catch( error => console.log(error))\n  };\n\n  matchCurrentPotential () {\n    let potentials = this.state.potentials;\n    let currentPotential = potentials.shift();\n    this.setState({ potentials, currentPotential })\n    fetch(`${url}/setmatch/${this.state.myUser.idid}`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(this.state.currentPotential) })\n      .then(this.fetchAndSetMatches)\n      .catch( error => console.log(error));\n  };\n\n  declineCurrentPotential () {\n    let potentials = this.state.potentials;\n    let currentPotential = potentials.shift();\n    this.setState({ potentials, currentPotential })\n    fetch(`${url}/setdecline/${this.state.myUser.idid}`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(this.state.currentPotential) })\n      .then(this.fetchAndSetMatches)\n      .catch( error => console.log(error));\n  };\n\n  fetchAndSetPotentials = () => {\n    fetch(`${url}/potentials/7`, {headers: {\n      'Access-Control-Allow-Credentials': true\n    }})\n      .then(result => result.json())\n      .then(potentials => {\n       let currentPotential = potentials[0];\n        this.setState({ currentPotential, potentials });\n        this.setState({ loading: false })\n      })\n      .catch(err => console.log(err));\n  }\n\n  updateUser = (e) => {\n    let profile = this.state.myUser;\n    if (e.first.length) profile.first = e.first;\n    if (e.last.length) profile.last = e.last;\n    if (Number(e.age) >= 14 && Number(e.age) <= 100) profile.age = Number(e.age);\n    if (Number(e.age) >= 1 && Number(e.age) <= 5) profile.last = Number(e.last);\n    profile.sport = e.sport;\n    fetch(`${url}/myuser/${profile.idid}`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(profile) })\n      .then((res) => console.log(res))\n      .then(this.fetchAndSetUser)\n      .then(this.fetchAndSetPotentials);\n  }\n\n  fetchAndSetUser = () => {\n    fetch(`${url}/myuser/7`, {headers: {\n      'Access-Control-Allow-Credentials': true\n    }})\n      .then(result => result.json())\n      .then(myUser => this.setState({ myUser }))\n      .catch( error => console.log(error));\n  }\n\n  fetchAndSetMatches = () => {\n    fetch(`${url}/matches/7`, {headers: {\n      'Access-Control-Allow-Credentials': true\n    }})\n      .then(result => result.json())\n      .then(matches => {\n        if (this.state.matches.length && matches.length > this.state.matches.length) this.setState({newMatch:true})\n        this.setState({ matches });\n      })\n  }\n\n  showPosition = (position) => {\n    return position.coords;\n  }\n\n  componentDidMount () {\n    this.fetchAndSetUser();\n    this.fetchAndSetMatches();\n    this.fetchAndSetPotentials();\n    document.documentElement.requestFullscreen && document.documentElement.requestFullscreen();\n  }\n\n  render () {\n\n    // if (!localStorage.getItem('token')) return (\n    //   <div>\n    //     <Router basepath={process.env.PUBLIC_URL}>\n    //       <Login path=\"/\" login={this.login.bind(this)} />\n    //       <Create path=\"create\" create={this.create} />\n    //     </Router>\n    //   </div>)\n\n    // if (!this.state.loading) {\n    //   return (\n    //     <div className=\"main-container\">\n    //       <Nav />\n    //       <Router basepath={process.env.PUBLIC_URL}>\n    //         <Profile path=\"profile\" myUser={this.state.myUser} updateUser={this.updateUser} logout={this.logout}/>\n    //         <Match path=\"/\" yes={this.matchCurrentPotential.bind(this)} no={this.declineCurrentPotential.bind(this)} potentials={this.state.potentials} newMatch={this.state.newMatch} toggleNew={this.toggleNew} currentPotential={this.state.currentPotential}/>\n    //         <MyMatches path=\"mymatches\" matches={this.state.matches} myUser={this.state.myUser} fetchAndSet={this.fetchAndSetMatches}/>\n    //         <Chat path=\"mymatches/chatview/:userId\" post={this.postMsgToServer.bind(this)} matches={this.state.matches} />\n    //       </Router>\n    //     </div>\n    //   );\n    // }\n    // else\n    return (<div className=\"loading\">LOADING</div>);\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport MessageList from '../components/MessageList';\nimport MessageInput from '../components/MessageInput'\n\n\nclass Chat extends Component {\n\n  render () {\n    const {post} = this.props;\n    const {matches} = this.props;\n    const {user} = this.props.location.state;\n\n    return (\n      <div className=\"chatbox\">\n        <MessageList user={user} matches={matches}/>\n        <MessageInput post={post} user={user} />\n      </div>\n    )\n  }\n}\n\nexport default Chat;","\nimport React, { Component } from 'react';\nimport { Link } from '@reach/router'\n\nclass LogIn extends Component {\n\n  state = {\n    email: '',\n    password: ''\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.login(this.state);\n    this.setState({\n      email: '',\n      password: ''\n    })\n  }\n\n  render () {\n    return (\n      <div className=\"login\">\n        <div className=\"logo\">\n          <span className=\"mylogo\">MATCH</span>\n          <Link className=\"create-account\" to=\"/create\">\n            <span className=\"test\">Create Account</span>\n          </Link>\n        </div>\n        <form className=\"login-form\" onSubmit={this.handleSubmit}>\n          <input type=\"text\" className=\"form-text form-item\" placeholder=\"Username\" name=\"email\" onChange={this.handleChange} value={this.state.email} />\n          <input type=\"password\" className=\"form-text form-item\" placeholder=\"Password\" name=\"password\" onChange={this.handleChange} value={this.state.password}></input>\n          <input type=\"submit\" className=\"form-btn form-item\" value=\"SUBMIT\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LogIn;","import React, { Component } from 'react';\nimport { Link, Redirect, navigate } from '@reach/router';\n\nclass Create extends Component {\n\n  state = {\n    first: '',\n    last: '',\n    age: '',\n    skill: '',\n    email: '',\n    password: '',\n    sport: 'tennis',\n    img: ''\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.create(this.state);\n    this.setState({\n      first: '',\n      last: '',\n      age: '',\n      // skill: '',\n      email: '',\n      password: ''\n    })\n    navigate(\"/\");\n  };\n\n  componentDidMount () {\n    var myWidget = window.cloudinary.createUploadWidget({\n      cloudName: 'pinchepanchopincho',\n      uploadPreset: 'e0jros9k'\n    }, (error, result) => {\n      if (error) console.log(error);\n      result.info.url && this.setState({ img: result.info.url })\n    })\n    document.getElementById(\"upload_widget\").addEventListener(\"click\", function () {\n      myWidget.open();\n    }, false);\n  };\n\n  render () {\n    console.log('creat', this.props)\n    if (localStorage.getItem('token')) return <Redirect to=\"\" />\n    return (\n      <div className=\"create\">\n        <div className=\"logo\">\n          <span className=\"mylogo\">MATCH</span>\n        </div>\n        <div className=\"user-create-input\">\n          <button id=\"upload_widget\" className=\"cloudinary-button\">Upload User Image</button>\n          <form className=\"create-form\" onSubmit={this.handleSubmit}>\n            <select className=\"form-select \" name=\"carlist\" form=\"carform\" name=\"sport\" onChange={this.handleChange}>\n              <option value=\"tennis\">Tennis</option>\n              <option value=\"tabletennis\">Table-Tennis</option>\n              <option value=\"badminton\">Badminton</option>\n              <option value=\"squash\">Squash</option>\n            </select>\n            <input type=\"text\" className=\"form-text form-item\" placeholder=\"First Name\" name=\"first\" onChange={this.handleChange} />\n            <input type=\"text\" className=\"form-text form-item\" placeholder=\"Last Name\" name=\"last\" onChange={this.handleChange} />\n            <input type=\"text\" className=\"form-text form-item\" placeholder=\"Age\" name=\"age\" onChange={this.handleChange} />\n            <input type=\"text\" className=\"form-text form-item\" placeholder=\"E-Mail\" name=\"email\" onChange={this.handleChange} />\n            <input type=\"text\" className=\"form-text form-item\" placeholder=\"password\" name=\"password\" onChange={this.handleChange} ></input>\n            <input type=\"submit\" className=\"form-btn\" value=\"Create User\"></input>\n          </form>\n        </div>\n        <Link to='/' className=\"login-link\">\n          <span>Already a user ?</span>\n          <button className=\"login-button\" onClick={this.props.logout}>LogIn</button>\n        </Link>\n      </div >\n    )\n  };\n};\n\nexport default Create;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}